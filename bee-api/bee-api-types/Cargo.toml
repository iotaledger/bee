[package]
name = "bee-api-types"
version = "1.0.0-beta.4"
authors = [ "IOTA Stiftung" ]
edition = "2021"
description = "Common types required by nodes and clients APIs like bodies, errors, responses and DTOs."
readme = "README.md"
repository = "https://github.com/iotaledger/bee"
license = "Apache-2.0"
keywords = [ "iota", "bee", "framework", "node", "api" ]
homepage = "https://www.iota.org"

[package.metadata.docs.rs]
# To build locally:
# RUSTDOCFLAGS="--cfg doc_cfg" cargo +nightly doc --all-features --no-deps --open
all-features = true
rustdoc-args = [ "--cfg", "doc_cfg" ]

[dependencies]
bee-block = { version = "1.0.0-beta.4", path = "../../bee-block", default-features = false, features = [ "dto" ] }
bee-ledger-types = { version = "1.0.0-beta.3", path = "../../bee-ledger/bee-ledger-types", default-features = false }
bee-protocol-types = { version = "1.0.0-beta.2", path = "../../bee-protocol/bee-protocol-types", default-features = false, optional = true }

axum = { version = "0.5.15", default-features = false, features = [ "json" ], optional =  true }
serde = { version = "1.0.143", default-features = false, features = [ "derive" ] }
thiserror = { version = "1.0.32", default-features = false }

[features]
default = [ "axum", "peer" ]
# Implement `axum::response::IntoResponse` for response types.
axum = [ "dep:axum" ]
peer = [ "bee-protocol-types" ]

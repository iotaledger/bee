name: CI

on:
  push:
    branches:
      - dev
      - stable
    paths-ignore:
      - 'documentation/**'
      - '**.md'
  pull_request:
    branches:
      - dev
      - stable
    paths-ignore:
      - 'documentation/**'
      - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [nightly, beta, stable]

    steps:
    - uses: actions/checkout@v2

    - name: Install LLVM and Clang (Windows)
      uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
      if: matrix.os == 'windows-latest'
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm

    - name: Set LIBCLANG_PATH (Windows)
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'

    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Cache cargo state
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - name: Cache target dir
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: |
          target/
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all --release

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [nightly, beta, stable]

    steps:
    - uses: actions/checkout@v2

    - name: Install LLVM and Clang (Windows)
      uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
      if: matrix.os == 'windows-latest'
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm

    - name: Set LIBCLANG_PATH (Windows)
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'

    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Cache cargo state
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - name: Cache target dir
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: |
          target/
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all --all-features --release

  clippy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy

      - name: Cache cargo state
        uses: actions/cache@v2
        env:
          cache-name: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
            ${{ matrix.os }}-${{ matrix.rust }}-build-
            ${{ matrix.os }}-${{ matrix.rust }}-
            ${{ matrix.os }}-

      - name: Cache target dir
        uses: actions/cache@v2
        env:
          cache-name: cache-target
        with:
          path: |
            target/
          key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
            ${{ matrix.os }}-${{ matrix.rust }}-build-
            ${{ matrix.os }}-${{ matrix.rust }}-
            ${{ matrix.os }}-

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

  format:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  udeps:
    needs: [clippy, format]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    - name: Cache cargo state
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - name: Cache target dir
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: |
          target/
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-udeps

    - uses: actions-rs/cargo@v1
      with:
        command: udeps
        args: --all-targets --all-features --backend=depinfo

  licenses:
    needs: [clippy, format]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: nightly
          override: true

    - name: Cache cargo state
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - name: Cache target dir
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: |
          target/
        key: ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-build-${{ env.cache-name }}-
          ${{ matrix.os }}-${{ matrix.rust }}-build-
          ${{ matrix.os }}-${{ matrix.rust }}-
          ${{ matrix.os }}-

    - uses: actions-rs/cargo@v1
      name: Install cargo-about
      with:
        command: install
        args: cargo-about

    - name: Move `about.toml` to project root
      run: mv .github/workflows/about.toml .

    - uses: actions-rs/cargo@v1
      name: Initialize template
      with:
        command: about
        args: init

    - uses: actions-rs/cargo@v1
      name: Check licenses
      with:
        command: about
        args: generate --workspace --all-features about.hbs

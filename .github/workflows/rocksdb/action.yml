name: 'Compile and cache RocksDB'
inputs:
  os:
    description: 'Which OS to use'
    required: true
    default: 'ubuntu-latest'
runs:
  using: 'composite'
  steps:
    - name: Set RocksDB version and build path (Unix)
      shell: bash
      if: inputs.os != 'windows-latest'
      run: |
        echo "ROCKSDB_VERSION=6.22.1" >> $GITHUB_ENV
        echo "ROCKSDB_BUILD_PATH=$(pwd)/rocksdb_build" >> $GITHUB_ENV

    - name: Set RocksDB version and build path (Windows)
      shell: pwsh
      if: inputs.os == 'windows-latest'
      run: |
        echo "ROCKSDB_VERSION=6.22.1" >> $env:GITHUB_ENV
        echo "ROCKSDB_BUILD_PATH=$(Get-Location)\rocksdb_build" >> $env:GITHUB_ENV

    - name: Set RocksDB path (Linux)
      shell: bash
      if: inputs.os == 'ubuntu-latest'
      run: echo "ROCKSDB_LIB_DIR=$ROCKSDB_BUILD_PATH/rocksdb-$ROCKSDB_VERSION/librocksdb.so" >> $GITHUB_ENV

    - name: Set RocksDB path (MacOS)
      shell: bash
      if: inputs.os == 'macos-latest'
      run: echo "ROCKSDB_LIB_DIR=$ROCKSDB_BUILD_PATH/rocksdb-$ROCKSDB_VERSION/librocksdb.dylib" >> $GITHUB_ENV

    - name: Set RocksDB path (Windows)
      shell: pwsh
      if: inputs.os == 'windows-latest'
      run: echo "ROCKSDB_LIB_DIR=$env:ROCKSDB_BUILD_PATH\RocksDB.$env:ROCKSDB_VERSION\runtimes\win-x64\native\rocksdb.dll" >> $env:GITHUB_ENV

    - name: Cache RocksDB
      uses: actions/cache@v2
      id: cache-rocksdb
      with:
        path: ${{ env.ROCKSDB_BUILD_PATH }}
        key: rocksdb-build-${{ env.ROCKSDB_VERSION }}-${{ inputs.os }}

    - name: Compile RocksDB (Linux)
      shell: bash
      if: steps.cache-rocksdb.outputs.cache-hit != 'true' && inputs.os == 'ubuntu-latest'
      run: |
        mkdir -p $ROCKSDB_BUILD_PATH
        cd $ROCKSDB_BUILD_PATH
        curl -L -O https://github.com/facebook/rocksdb/archive/refs/tags/v$ROCKSDB_VERSION.tar.gz
        tar -xzf v$ROCKSDB_VERSION.tar.gz
        rm -r v$ROCKSDB_VERSION.tar.gz
        cd rocksdb-$ROCKSDB_VERSION
        make shared_lib

    - name: Compile RocksDB (MacOS)
      shell: bash
      if: steps.cache-rocksdb.outputs.cache-hit != 'true' && inputs.os == 'macos-latest'
      run: |
        mkdir -p $ROCKSDB_BUILD_PATH
        cd $ROCKSDB_BUILD_PATH
        curl -L -O https://github.com/facebook/rocksdb/archive/refs/tags/v$ROCKSDB_VERSION.tar.gz
        tar -xzf v$ROCKSDB_VERSION.tar.gz
        rm -r v$ROCKSDB_VERSION.tar.gz
        cd rocksdb-$ROCKSDB_VERSION
        make shared_lib

    - name: Add msbuild to PATH (Windows)
      if: inputs.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.1

    - name: Install RocksDB (Windows)
      shell: pwsh
      if: inputs.os == 'windows-latest'
      run: |
        New-Item $env:ROCKSDB_BUILD_PATH -itemtype directory -Force
        Set-Location $env:ROCKSDB_BUILD_PATH
        vcpkg install lz4
        git clone https://github.com/facebook/rocksdb
        Set-Location rocksdb
        git checkout -q tags/v$env:ROCKSDB_VERSION
        New-Item build -itemtype directory -Force
        Set-Location build
        cmake -G "Visual Studio 16 2019" ..
        msbuild rocksdb.sln /p:Configuration=Release
        Get-ChildItem -Force -Recurse

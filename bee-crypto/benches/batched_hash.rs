use bee_ternary::{T1B1Buf, TryteBuf};

use bee_crypto::ternary::sponge::{batched_curl::BatchHasher, CurlPRounds};

use criterion::{black_box, criterion_group, criterion_main, Criterion};

fn length_243(c: &mut Criterion) {
    let input = "HHPELNTNJIOKLYDUW9NDULWPHCWFRPTDIUWLYUHQWWJVPAKKGKOAZFJPQJBLNDPALCVXGJLRBFSHATF9C";
    let input_trit_buf = TryteBuf::try_from_str(input).unwrap().as_trits().encode::<T1B1Buf>();
    let length = input_trit_buf.len();
    let mut hasher = BatchHasher::new(length, 243, CurlPRounds::Rounds81);

    c.bench_function("batched 243", |b| {
        b.iter(|| {
            for _ in 0..64 {
                hasher.add(black_box(input_trit_buf.clone()));
            }
            for _ in hasher.hash_batched() {}
        })
    });

    c.bench_function("unbatched 243", |b| {
        b.iter(|| {
            for _ in 0..64 {
                hasher.add(black_box(input_trit_buf.clone()));
            }
            for _ in hasher.hash_unbatched() {}
        })
    });
}

fn length_6561(c: &mut Criterion) {
    let input
    let input_trit_buf = TryteBuf::try_from_str(input).unwrap().as_trits().encode::<T1B1Buf>();
    let length = input_trit_buf.len();
    let mut hasher = BatchHasher::new(length, 243, CurlPRounds::Rounds81);

    c.bench_function("batched 6561", |b| {
        b.iter(|| {
            for _ in 0..64 {
                hasher.add(black_box(input_trit_buf.clone()));
            }
            for _ in hasher.hash_batched() {}
        })
    });

    c.bench_function("unbatched 6561", |b| {
        b.iter(|| {
            for _ in 0..64 {
                hasher.add(black_box(input_trit_buf.clone()));
            }
            for _ in hasher.hash_unbatched() {}
        })
    });
}

criterion_group!(benches, length_243, length_6561);
criterion_main!(benches);
